# Generated by pkglite: do not edit by hand
# Use pkglite::unpack() to restore the packages

Package: esubdemo
File: .Rbuildignore
Format: text
Content:
  ^renv$
  ^renv\.lock$
  ^.*\.Rproj$
  ^\.Rproj\.user$
  ^_pkgdown\.yml$
  ^pkgdown$
  ^docs$
  ^pkgdown$
  ^README\.Rmd$
  ^\.gitignore$
  ^\.DS_Store$
  ^\.git\$
  ^Meta$
  ^codecov\.yml$
  ^vignettes$
  ^tests/testthat/_snaps$
  ^library$
  ^data-raw$
  ^LICENSE\.md$
  ^output$
  ^adam$
  ^\.github$
  ^readme.md$
  ^esubdemo\.Rcheck$
  ^esubdemo.*\.tar\.gz$
  ^esubdemo.*\.tgz$

Package: esubdemo
File: DESCRIPTION
Format: text
Content:
  Package: esubdemo
  Type: Package
  Title: A demo project for analysis and reporting of clinical trials
  Version: 0.0.1
  Authors@R: c(
          person("Yilong Zhang", email = "elong0527@gmail.com", role = c("aut", "cre"))
         )
  Description: A demo project for analysis and reporting of clinical trials. 
  Depends: R (>= 3.6.0)
  License: GPL (>= 3)
  Imports: 
      r2rtf,
      fs,
      haven,
      table1,
      emmeans,
      stringr,
      magrittr
  Suggests: 
      devtools,
      testthat (>= 3.0.0),
      knitr,
      rmarkdown,
      covr,
      dplyr,
      tidyr,
      renv
  Encoding: UTF-8
  LazyData: true
  Roxygen: list(markdown = TRUE)  
  Rmarkdwon: echo = TRUE
  RoxygenNote: 7.1.1
  VignetteBuilder: knitr
  Config/testthat/edition: 3

Package: esubdemo
File: NAMESPACE
Format: text
Content:
  # Generated by roxygen2: do not edit by hand
  
  export("%>%")
  export(count_by)
  export(fmt_ci)
  export(fmt_est)
  export(fmt_num)
  export(fmt_pval)
  importFrom(magrittr,"%>%")

Package: esubdemo
File: README.md
Format: text
Content:
  # esubdemo
  
  <!-- badges: start -->
  [![R build status](https://github.com/elong0527/esubdemo/workflows/R-CMD-check/badge.svg)](https://github.com/elong0527/esubdemo/actions)
  <!-- badges: end -->
  
  ## Overview
  
  `esubdemo` is a demo project to illustrate how to organize analysis scripts
  in an R package folder structure.
  
  The demo project follows the concepts discussed in:
  
  - [Marwick, B., Boettiger, C., & Mullen, L. (2018). Packaging data analytical work reproducibly using R (and friends). The American Statistician, 72(1), 80-88.](https://peerj.com/preprints/3192/)
  - [Wu, P., Palukuru, U. P., Luo, Y., Nepal, S., & Zhang, Y. (2021) Analysis and reporting in regulated clinical trial environment using R. PharmaSUG 2021](https://www.pharmasug.org/proceedings/2021/AD/PharmaSUG-2021-AD-079.pdf)
  - [R for Clinical Study Reports and Submission](https://r4csr.org)
  
  ## Folder Structure
  
  By using an R package folder structure and the associated development tools,
  we are able to achieve:
  
  - Consistency
  - Automation
  - Reproducibility
  - Compliance
  
  Below are the minimal sufficient folders and files leveraging the
  R package folder structure.
  
  - `*.Rproj`: RStudio project file for opening the project.
  - `DESCRIPTION`: Metadata for a package including authors, license, dependencies, etc.
  - `vignettes/`: Analysis scripts using R Markdown.
  - `R/`: Project-specific R functions.
  - `man/`: Manual of project-specific R functions.
  
  There are additional folders and files required in this demo for an analysis project.
  
  > People may use different folder names as it is not a standard R package folder.
  > These folders and files often need to be added in `.Rbuildignore` to pass
  > automated checking.
  
  - `vignettes/adam_data`: ADaM datasets in `.sas7bdat` format.
    - One may also put it in `inst/extdata` following [R package convention](https://r-pkgs.org/data.html)
    - In reality, we suggest to have real data saved outside of this project (e.g., in a database)
  - `vignettes/tlf`: TLF outputs
  - `renv.lock` and `renv`: R package management using the `renv` package ([introduction](https://rstudio.github.io/renv/articles/renv.html)).
  - `_pkgdown.yml`: [pkgdown](https://pkgdown.r-lib.org/articles/pkgdown.html) configuration file
  - `.Rprofile`: Project startup file to setup running environment including R version, package repository, folder paths, etc.
    - We further use `inst/startup.R` and `R/zzz.R` to ensure the startup file is executed both when running `devtools::load_all()` and running regular build & reload.

Package: esubdemo
File: R/count_by.R
Format: text
Content:
  #' Count value by variables 
  #' 
  #' @param data A data frame
  #' @param grp Group variable in `data`. 
  #' @param var Analysis variable in `data`. 
  #' @param var_label A string of analysis variable label. 
  #' @param id Subject id variable in `data`. 
  #' 
  #' @export
  count_by <- function(data, 
                       grp, 
                       var, 
                       var_label = var, 
                       id = "USUBJID") { 
    data <- data %>% 
      dplyr::rename(grp = !!grp, var = !!var, id = !!id)
    
    dplyr::left_join(
      dplyr::count(data, grp, var),
      dplyr::count(data, grp, name = "tot"),
      by = "grp",
    ) %>%
      dplyr::mutate(
        pct = fmt_num(100 * n / tot, digits = 1),
        n = fmt_num(n, digits = 0),
        npct = paste0(n, " (", pct, ")")
      ) %>%
      tidyr::pivot_wider(
        id_cols = var,
        names_from = grp,
        values_from = c(n, pct, npct),
        values_fill = list(n = "0", pct = fmt_num(0, digits = 0))
      ) %>%
      dplyr::mutate(var_label = var_label)
  }

Package: esubdemo
File: R/fmt.R
Format: text
Content:
  #' Format numeric value 
  #' 
  #' @inheritParams base::formatC
  #' 
  #' @export
  fmt_num <- function(x, digits, width = digits + 4) {
    formatC(x,
            digits = digits,
            format = "f",
            width = width
    )
  }
  
  #' Format point estimator
  #' 
  #' @param .mean mean of an estimator. 
  #' @param .sd sd of an estimator.
  #' @param digits number of digits for `.mean` and `.sd`.
  #' 
  #' @export
  fmt_est <- function(.mean,
                      .sd,
                      digits = c(1, 2)) {
    .mean <- fmt_num(.mean, digits[1], width = digits[1] + 4)
    .sd <- fmt_num(.sd, digits[2], width = digits[2] + 3)
    paste0(.mean, " (", .sd, ")")
  }
  
  #' Format confidence interval
  #' 
  #' @param .est an estimator. 
  #' @param .lower lower confidence interval bound of an estimator.
  #' @param .upper upper confidence interval bound of an estimator.
  #' @param digits number of digits for `.est`, `.lower`, and `.upper`.
  #' @param width the total field width. 
  #' 
  #' @export
  fmt_ci <- function(.est,
                     .lower,
                     .upper,
                     digits = 2,
                     width = digits + 3) {
    .est <- fmt_num(.est, digits, width)
    .lower <- fmt_num(.lower, digits, width)
    .upper <- fmt_num(.upper, digits, width)
    paste0(.est, " (", .lower, ",", .upper, ")")
  }
  
  #' Format p-Value
  #' 
  #' @param .p a p-value. 
  #' @param digits number of digits for `.est`, `.lower`, and `.upper`.
  #' 
  #' @export
  fmt_pval <- function(.p, digits = 3) {
    scale <- 10^(-1 * digits)
    p_scale <- paste0(" <", 10^(-digits))
    ifelse(.p < scale, p_scale, fmt_num(.p, digits = digits))
  }

Package: esubdemo
File: R/utils-pipe.R
Format: text
Content:
  #' Pipe operator
  #'
  #' See \code{magrittr::\link[magrittr:pipe]{\%>\%}} for details.
  #'
  #' @name %>%
  #' @rdname pipe
  #' @keywords internal
  #' @export
  #' @importFrom magrittr %>%
  #' @usage lhs \%>\% rhs
  #' @param lhs A value or the magrittr placeholder.
  #' @param rhs A function call using the magrittr semantics.
  #' @return The result of calling `rhs(lhs)`.
  NULL

Package: esubdemo
File: R/zzz.R
Format: text
Content:
  # Modify with care!
  # The file is to load startup file automatically when the package is loaded. 
  
  .onLoad <- function(libname, pkgname) {
    
    startup <- system.file("startup.R", package = pkgname)
    
    if(file.exists(startup)){
      source(startup)
    }else{
      stop("Can not find", startup)
    }
    
    invisible(startup)
  }
  
  globalVariables(c("n", "tot", "pct", "npct"))

Package: esubdemo
File: man/count_by.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/count_by.R
  \name{count_by}
  \alias{count_by}
  \title{Count value by variables}
  \usage{
  count_by(data, grp, var, var_label = var, id = "USUBJID")
  }
  \arguments{
  \item{data}{A data frame}
  
  \item{grp}{Group variable in \code{data}.}
  
  \item{var}{Analysis variable in \code{data}.}
  
  \item{var_label}{A string of analysis variable label.}
  
  \item{id}{Subject id variable in \code{data}.}
  }
  \description{
  Count value by variables
  }

Package: esubdemo
File: man/fmt_ci.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/fmt.R
  \name{fmt_ci}
  \alias{fmt_ci}
  \title{Format confidence interval}
  \usage{
  fmt_ci(.est, .lower, .upper, digits = 2, width = digits + 3)
  }
  \arguments{
  \item{.est}{an estimator.}
  
  \item{.lower}{lower confidence interval bound of an estimator.}
  
  \item{.upper}{upper confidence interval bound of an estimator.}
  
  \item{digits}{number of digits for \code{.est}, \code{.lower}, and \code{.upper}.}
  
  \item{width}{the total field width.}
  }
  \description{
  Format confidence interval
  }

Package: esubdemo
File: man/fmt_est.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/fmt.R
  \name{fmt_est}
  \alias{fmt_est}
  \title{Format point estimator}
  \usage{
  fmt_est(.mean, .sd, digits = c(1, 2))
  }
  \arguments{
  \item{.mean}{mean of an estimator.}
  
  \item{.sd}{sd of an estimator.}
  
  \item{digits}{number of digits for \code{.mean} and \code{.sd}.}
  }
  \description{
  Format point estimator
  }

Package: esubdemo
File: man/fmt_num.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/fmt.R
  \name{fmt_num}
  \alias{fmt_num}
  \title{Format numeric value}
  \usage{
  fmt_num(x, digits, width = digits + 4)
  }
  \arguments{
  \item{x}{an atomic numerical or character object, possibly
      \code{\link[base]{complex}} only for \code{prettyNum()}, typically a
      vector of real numbers.  Any class is discarded, with a warning.}
  
  \item{digits}{the desired number of digits after the decimal
      point (\code{format = "f"}) or \emph{significant} digits
      (\code{format = "g"}, \code{= "e"} or \code{= "fg"}).
  
      Default: 2 for integer, 4 for real numbers.  If less than 0,
      the C default of 6 digits is used.  If specified as more than 50, 50
      will be used with a warning unless \code{format = "f"} where it is
      limited to typically 324. (Not more than 15--21 digits need be
      accurate, depending on the OS and compiler used.  This limit is
      just a precaution against segfaults in the underlying C runtime.)
    }
  
  \item{width}{the total field width; if both \code{digits} and
      \code{width} are unspecified, \code{width} defaults to 1,
      otherwise to \code{digits + 1}.  \code{width = 0} will use
      \code{width = digits}, \code{width < 0} means left
      justify the number in this field (equivalent to \code{flag = "-"}).
      If necessary, the result will have more characters than
      \code{width}.  For character data this is interpreted in characters
      (not bytes nor display width).
    }
  }
  \description{
  Format numeric value
  }

Package: esubdemo
File: man/fmt_pval.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/fmt.R
  \name{fmt_pval}
  \alias{fmt_pval}
  \title{Format p-Value}
  \usage{
  fmt_pval(.p, digits = 3)
  }
  \arguments{
  \item{.p}{a p-value.}
  
  \item{digits}{number of digits for \code{.est}, \code{.lower}, and \code{.upper}.}
  }
  \description{
  Format p-Value
  }

Package: esubdemo
File: man/pipe.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/utils-pipe.R
  \name{\%>\%}
  \alias{\%>\%}
  \title{Pipe operator}
  \usage{
  lhs \%>\% rhs
  }
  \arguments{
  \item{lhs}{A value or the magrittr placeholder.}
  
  \item{rhs}{A function call using the magrittr semantics.}
  }
  \value{
  The result of calling \code{rhs(lhs)}.
  }
  \description{
  See \code{magrittr::\link[magrittr:pipe]{\%>\%}} for details.
  }
  \keyword{internal}

Package: esubdemo
File: inst/pkgdown/assets/readme.txt
Format: text
Content:
  place holder

Package: esubdemo
File: inst/pkgdown/templates/readme.txt
Format: text
Content:
  place holder

Package: esubdemo
File: inst/startup.R
Format: text
Content:
  # Project Level Setup 
  
  R_version <- "4.1.0"																                  # set up project R version
  snapshot  <- "2021-08-06" 									                          # set up snapshot date
  repos     <- paste0("https://mran.microsoft.com/snapshot/", snapshot) # set up repository based on snapshot
  
  # Define repo URL for project specific package installation
  options(repos = repos)
  
  # Check R Version
  if(paste(R.version$major, R.version$minor, sep = ".") != R_version){
   warning("The current R version is not the same with the current project in ", R_version)
  }
  
  # Repository
  message("Current project R package repository:")
  message(paste0("    ", getOption("repos")))
  message(" ")
  
  # Display R Session Status
  #message("R packages were installed from repo: ", options('repo'), "\n")
  # message("Below R package path are searching in order to find installed R pacakges in this R session:", "\n",
  #         paste(paste0("    ", .libPaths()), collapse = "\n"))
  # message("\n")
  
  rm(R_version, repos, snapshot)

